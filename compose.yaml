# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    environment:
      AUTH_CLIENT_BASE_URL: http://host.docker.internal
      AUTH_CLIENT_USERNAME: admin
      AUTH_CLIENT_PASSWORD: admin
      AUTH_CLIENT_GRANT_TYPE: password
      AUTH_CLIENT_ID: admin-cli
      AUTH_CLIENT_PORT: 8180
      AUTH_CLIENT_REALM: master
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_SCHEMA: public
      PORT: 9971
      DB_NAME: testdb
      DB_PORT: 5432
      DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app
    ports:
      - '9971:9971'
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  postgres:
    image: postgres:16
    restart: always
    user: postgres
    environment:
      POSTGRES_DB: 'testdb'
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres-data:
